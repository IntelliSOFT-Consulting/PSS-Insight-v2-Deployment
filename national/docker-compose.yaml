version: "3.6"
services:
  pss_ws_national_db:
    command:
      - postgres
    container_name: pss_ws_national_db
    entrypoint:
      - docker-entrypoint.sh
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=national_db
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - LANG=en_US.utf8
      - PG_MAJOR=14
      - PG_VERSION=14.1
      - PG_SHA256=4d3c101ea7ae38982f06bdc73758b53727fb6402ecd9382006fa5ecc7c2ca41f
      - PGDATA=/var/lib/postgresql/data
    hostname: 4b09bb8d4bd4
    image: postgres:14.1-alpine
    build:
      context: .
      dockerfile: Dockerfile-national_db
    ipc: private
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    logging:
      driver: json-file
      options: {
        max-size: 15m,
        max-file: 5
      }
    networks:
      - docker_default
    ports:
      - 5438:5432/tcp
    restart: always
    volumes:
      #- docker_national_db:/var/lib/postgresql/data
      #- docker_file_db:/var/lib/postgresql/data/file_db
      - postgres_data:/var/lib/postgresql/data
      - ./db/national_db_2023.07.27.sql:/docker-entrypoint-initdb.d/national_db.sql

  pss_ws_national:
    container_name: pss_ws_national
    entrypoint:
      - java
      - -jar
      - target/PssNationalInstance.jar
    environment:
      - PATH=/usr/local/openjdk-11/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - JAVA_HOME=/usr/local/openjdk-11
      - LANG=C.UTF-8
      - JAVA_VERSION=11.0.16
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-localdev}
    hostname: a2598f7830a6
    image: intellisoftdev/pss_ws_national:latest
    build:
      context: .
      dockerfile: Dockerfile-dhis_pss_national
    ipc: private
    logging:
      driver: json-file
      options: {}
    mac_address: 02:42:ac:11:00:02
    # network_mode: bridge
    ports:
      - 7001:7001/tcp
    working_dir: /national_javabackend
    depends_on:
      - pss_ws_national_db
    deploy:
      resources:
        limits:
          memory: 4g
    networks:
      - docker_default
    restart: always
  pss_data_synchronization:
    command:
      - cron
      - -f
    container_name: pss_data_synchronization
    environment:
      - SOURCE_USERNAME=admin
      - SOURCE_PASSWORD=district
      - TARGET_USERNAME=admin
      - TARGET_PASSWORD=district
      - PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - LANG=C.UTF-8
      - GPG_KEY=E3FF2839C048B25C084DEBE9B26995E310250568
      - PYTHON_VERSION=3.9.17
      - PYTHON_PIP_VERSION=23.0.1
      - PYTHON_SETUPTOOLS_VERSION=58.1.0
      - PYTHON_GET_PIP_URL=https://github.com/pypa/get-pip/raw/0d8570dc44796f4369b652222cf176b3db6ac70e/public/get-pip.py
      - PYTHON_GET_PIP_SHA256=96461deced5c2a487ddc65207ec5a9cffeca0d34e7af7ea1afc470ff0d746207
    hostname: c5c3f3f32ea9
    image: intellisoftdev/pss_data_sync:latest
    build:
      context: .
      dockerfile: Dockerfile-pss_data_synchronization
    ipc: private
    logging:
      driver: json-file
      options: {}
    mac_address: 02:42:ac:11:00:03
    # network_mode: bridge
    networks:
      - docker_default
    ports:
      - 8000:8000/tcp
    working_dir: /app
    restart: always
  survey-app:
    command:
      - nginx
      - -g
      - daemon off;
    container_name: survey-app
    entrypoint:
      - /docker-entrypoint.sh
    environment:
      - PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      - NGINX_VERSION=1.25.1
      - PKG_RELEASE=1
      - NJS_VERSION=0.7.12
      - REACT_APP_API_URL=https://local.pssinsight.org
    hostname: 9ce9118d34a9
    image: intellisoftdev/pss-survey
    build:
      context: .
      dockerfile: Dockerfile-survey-app
    ipc: private
    labels:
      maintainer: NGINX Docker Maintainers <docker-maint@nginx.com>
    logging:
      driver: json-file
      options: {}
    mac_address: 02:42:ac:11:00:04
    # network_mode: bridge
    networks:
      - docker_default
    ports:
      - 3000:3000/tcp
    restart: always
  core:
    image: "${DHIS2_CORE_IMAGE}"
    container_name: core
    restart: always
    volumes:
      - ${DHIS2_CORE_CONFIG:-./config/DHIS2_home/dhis.conf}:${DHIS2_HOME:-/DHIS2_home}/dhis.conf
      - ./config/DHIS2_home/log4j2.xml:${DHIS2_HOME:-/DHIS2_home}/log4j2.xml
      - ./config/server.xml:/usr/local/tomcat/conf/server.xml
      - home:${DHIS2_HOME:-/DHIS2_home}
    environment:
      DHIS2_HOME: ${DHIS2_HOME:-/DHIS2_home}
      CATALINA_OPTS: "-Dcontext.path='${DHIS2_CORE_CONTEXT_PATH:-}' \
              -Dlog4j2.configurationFile=${DHIS2_HOME:-/DHIS2_home}/log4j2.xml"
    networks:
      - docker_default
    depends_on:
      - "db"
  db:
    image: ghcr.io/baosystems/postgis:12-3.3
    container_name: db
    command: "postgres -c max_locks_per_transaction=100"
    restart: always
    volumes:
      - datadb:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: dhis2
      POSTGRES_USER: dhis
      POSTGRES_PASSWORD: dhis
    networks:
      - docker_default
  gateway:
    image: "jwilder/nginx-proxy:alpine"
    container_name: gateway
    restart: always
    ports:
      - "${DHIS2_CORE_PORT}:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.apps:/data/apps:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - docker_default
networks:
  docker_default:
    external: false
    name: docker_default
volumes:
  datadb:
  home:
  docker_national_db:
    external: false
  docker_file_db:
    external: false
  postgres_data:
    external: false
